{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Action, Selector, State } from \"@ngxs/store\";\nimport { Login } from \"../welcome-page/auth.actions\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user-api.service\";\nlet AuthState = class AuthState {\n  constructor(authService) {\n    this.authService = authService;\n  }\n\n  static token(state) {\n    return state.token;\n  }\n\n  static isAuthenticated(state) {\n    console.log(!!state.token);\n    return !!state.token;\n  }\n\n  login(ctx, action) {\n    const state = ctx.getState();\n    state.token = action.token;\n    ctx.setState({ ...state\n    });\n    console.log(state.token);\n  }\n\n};\n\nAuthState.ɵfac = function AuthState_Factory(t) {\n  return new (t || AuthState)(i0.ɵɵinject(i1.UserApiService));\n};\n\nAuthState.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthState,\n  factory: AuthState.ɵfac\n});\n\n__decorate([Action(Login)], AuthState.prototype, \"login\", null);\n\n__decorate([Selector()], AuthState, \"token\", null);\n\n__decorate([Selector()], AuthState, \"isAuthenticated\", null);\n\nAuthState = __decorate([State({\n  name: \"auth\",\n  defaults: {\n    token: \"\"\n  }\n})], AuthState);\nexport { AuthState };","map":null,"metadata":{},"sourceType":"module"}